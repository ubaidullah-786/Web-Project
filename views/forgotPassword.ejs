<div class="auth-page">
  <div class="container">
    <div class="auth-wrapper">
      <!-- Forgot Password Section -->
      <div class="auth-section">
        <h2 class="section-title">FORGOT PASSWORD</h2>
        <p class="section-description">
          By using the form below, we'll email you a link to allow you to reset
          your password. Please check your junk/spam folders for the email.
        </p>

        <form
          id="forgotPasswordForm"
          class="auth-form"
          method="POST"
          action="/forgot-password"
          novalidate
        >
          <div class="form-group">
            <label for="forgotEmail" class="form-label">Email Address</label>
            <input
              type="email"
              id="forgotEmail"
              name="email"
              class="form-input"
              placeholder="Enter your email address"
              required
            />
            <span class="error-message" id="forgotEmailError"></span>
          </div>

          <button type="submit" class="auth-btn">Reset Password</button>

          <div class="auth-links">
            <p class="back-to-login">
              Remember your password?
              <a href="/login" class="login-link">Back to Login</a>
            </p>
            <p class="register-prompt">
              Don't have an account?
              <a href="/register" class="register-link">Create Account</a>
            </p>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<style>
  .auth-page {
    padding: 6rem 2rem;
    max-width: 60rem;
    margin: 0 auto;
    color: #333;
    min-height: 60vh;
    display: flex;
    align-items: center;
  }

  .container {
    width: 100%;
  }

  .auth-wrapper {
    background: #fff;
    padding: 4rem;
    border-radius: 0.8rem;
    box-shadow: 0 0.2rem 1rem rgba(0, 0, 0, 0.1);
  }

  .auth-section {
    text-align: center;
  }

  .section-title {
    font-size: 3.2rem;
    font-weight: 600;
    letter-spacing: 0.1rem;
    color: #2c2c2c;
    margin-bottom: 2rem;
  }

  .section-description {
    font-size: 1.5rem;
    color: #666;
    line-height: 1.6;
    margin-bottom: 4rem;
    max-width: 45rem;
    margin-left: auto;
    margin-right: auto;
  }

  .auth-form {
    max-width: 40rem;
    margin: 0 auto;
    text-align: left;
  }

  .form-group {
    margin-bottom: 3rem;
  }

  .form-label {
    display: block;
    font-size: 1.4rem;
    font-weight: 500;
    color: #2c2c2c;
    margin-bottom: 0.8rem;
  }

  .form-input {
    width: 100%;
    padding: 1.4rem 1.6rem;
    border: 1px solid #ddd;
    border-radius: 0.4rem;
    font-size: 1.4rem;
    background: #fff;
    transition: border-color 0.3s ease;
    box-sizing: border-box;
  }

  .form-input:focus {
    outline: none;
    border-color: #000;
  }

  .form-input::placeholder {
    color: #999;
  }

  .form-input.error {
    border-color: #e74c3c;
  }

  .error-message {
    display: block;
    color: #e74c3c;
    font-size: 1.2rem;
    margin-top: 0.5rem;
    min-height: 1.5rem;
  }

  .auth-btn {
    width: 100%;
    background: #000;
    color: white;
    border: none;
    padding: 1.6rem 2rem;
    font-size: 1.4rem;
    font-weight: 600;
    letter-spacing: 0.1rem;
    cursor: pointer;
    border-radius: 0.4rem;
    transition: background-color 0.3s ease;
    margin-bottom: 3rem;
  }

  .auth-btn:hover {
    background: #333;
  }

  .auth-links {
    text-align: center;
  }

  .back-to-login,
  .register-prompt {
    font-size: 1.4rem;
    color: #666;
    margin: 0 0 1rem 0;
  }

  .login-link,
  .register-link {
    color: #000;
    text-decoration: underline;
    font-weight: 500;
  }

  .login-link:hover,
  .register-link:hover {
    color: #333;
  }

  .success-message {
    background: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
    border-radius: 0.4rem;
    padding: 1.2rem 1.6rem;
    margin-bottom: 2rem;
    font-size: 1.4rem;
    display: none;
  }

  .success-message.show {
    display: block;
  }

  @media (max-width: 768px) {
    .auth-page {
      padding: 4rem 1rem;
    }

    .auth-wrapper {
      padding: 3rem 2rem;
    }

    .section-title {
      font-size: 2.8rem;
    }

    .section-description {
      font-size: 1.4rem;
    }
  }

  @media (max-width: 480px) {
    .auth-wrapper {
      padding: 2rem 1.5rem;
    }

    .section-title {
      font-size: 2.4rem;
    }

    .section-description {
      margin-bottom: 3rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Form validation functions
    function validateEmail(email) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      return emailRegex.test(email);
    }

    function showError(fieldId, message) {
      const errorElement = document.getElementById(fieldId + 'Error');
      const inputElement = document.getElementById(fieldId);

      errorElement.textContent = message;
      inputElement.classList.add('error');
    }

    function clearError(fieldId) {
      const errorElement = document.getElementById(fieldId + 'Error');
      const inputElement = document.getElementById(fieldId);

      errorElement.textContent = '';
      inputElement.classList.remove('error');
    }

    function showSuccessMessage() {
      // Create success message if it doesn't exist
      let successMessage = document.querySelector('.success-message');
      if (!successMessage) {
        successMessage = document.createElement('div');
        successMessage.className = 'success-message';
        successMessage.innerHTML =
          'Password reset link has been sent to your email address. Please check your inbox and spam folder.';

        const form = document.getElementById('forgotPasswordForm');
        form.insertBefore(successMessage, form.firstChild);
      }

      successMessage.classList.add('show');

      // Hide success message after 5 seconds
      setTimeout(() => {
        successMessage.classList.remove('show');
      }, 5000);
    }

    // Forgot password form validation
    const forgotPasswordForm = document.getElementById('forgotPasswordForm');
    forgotPasswordForm.addEventListener('submit', function (e) {
      const email = document.getElementById('forgotEmail').value;
      let isValid = true;

      // Clear previous errors
      clearError('forgotEmail');

      // Validate email
      if (!email) {
        showError('forgotEmail', 'Email address is required');
        isValid = false;
        e.preventDefault();
      } else if (!validateEmail(email)) {
        showError('forgotEmail', 'Please enter a valid email address');
        isValid = false;
        e.preventDefault();
      }

      // If validation fails, prevent form submission
      if (!isValid) {
        e.preventDefault();
      } else {
        // Show success message (for demo purposes)
        // In production, this would be handled by the server response
        e.preventDefault();
        showSuccessMessage();

        // Reset form
        setTimeout(() => {
          forgotPasswordForm.reset();
        }, 1000);
      }
    });

    // Real-time validation (clear errors when user starts typing)
    const inputs = document.querySelectorAll('.form-input');
    inputs.forEach(input => {
      input.addEventListener('input', function () {
        if (this.classList.contains('error')) {
          clearError(this.id);
        }
      });
    });
  });
</script>
